{"version":3,"sources":["api/petfinder/index.js","components/hero/index.js","pages/home/index.js","components/pet/index.js","pages/search/index.js","pages/detail/index.js","pages/petDetailsNotFound/index.js","assets/logo.svg","components/search/index.js","components/navigation/index.js","components/footer/index.js","App.js","reportWebVitals.js","index.js","mocks/handlers.js","mocks/browser.js"],"names":["getPets","a","type","query","searchParams","URLSearchParams","requestUrl","toString","fetch","method","response","json","getPetDetails","id","Hero","image","displayText","className","style","backgroundImage","backgroundBlendMode","backgroundPosition","backgroundRepeat","backgroundSize","backgroundColor","getHeroTitle","HomePage","useState","data","setData","useParams","useEffect","petsData","getPetsData","length","map","animal","to","toLowerCase","src","photos","medium","alt","name","breeds","primary","colors","gender","marginLeft","marginRight","Pet","SearchPage","search","useLocation","queryParams","useMemo","pets","setPets","petNameToFind","get","pet","PetDetailsPage","loading","setLoading","error","setError","addDefaultSrc","event","target","large","photo","onError","description","PetDetailsNotFound","history","useHistory","onClick","goBack","Search","searchInputRef","useRef","onSubmit","e","preventDefault","searchQuery","current","value","trim","push","ref","Navigation","Logo","exact","activeClassName","Footer","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","require","worker","start","ReactDOM","render","StrictMode","document","getElementById","handlers","rest","_req","res","ctx","status","types","req","url","animals","filter","contact","address","state","includes","params","details","setupWorker"],"mappings":"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","file":"static/js/main.cff31a06.chunk.js","sourcesContent":["export const getPets = async (type = '', query = '') => {\n  const searchParams = new URLSearchParams({ type, query });\n  const requestUrl = `/animals?${searchParams.toString()}`;\n\n  const response = await fetch(requestUrl, {\n    method: 'GET'\n  });\n\n  const json = await response.json();\n\n  return json;\n};\n\nexport const getPetDetails = async (id) => {\n  const requestUrl = `/animals/${id}`;\n  const response = await fetch(requestUrl, {\n    method: 'GET'\n  });\n\n  const json = await response.json();\n\n  return json;\n};\n\nexport const getPetTypes = async () => {\n  const requestUrl = `/types`;\n  const response = await fetch(requestUrl, {\n    method: 'GET'\n  });\n\n  const json = await response.json();\n\n  return json;\n};\n","import React from 'react';\n\nconst Hero = ({ image, displayText }) => {\n  const type = ''\n\n  return (\n    <div\n      className=\"hero-container\"\n      style={{\n        backgroundImage: `linear-gradient(to right, indigo, purple, black, black, black, purple, indigo), url(\"${\n          image || 'pets-hero.png'\n        }\")\n          `,\n        backgroundBlendMode: 'screen',\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'auto',\n        backgroundColor: '#0000008f'\n      }}\n    >\n      <h2>{displayText || getHeroTitle(type)}</h2>\n    </div>\n  );\n};\n\nexport default Hero;\n\nconst getHeroTitle = (type) => {\n  switch (type) {\n    case 'dog':\n      return 'Dogs';\n    case 'cat':\n      return 'Cats';\n    case 'rabbit':\n      return 'Rabbits';\n    case 'bird':\n      return 'Birds';\n    default:\n      return 'Find your perfect pet';\n  }\n};\n","import React, { useEffect, useState } from 'react';\nimport { getPets } from '../../api/petfinder';\nimport Hero from '../../components/hero';\n//import Pet from '../../components/pet';\nimport { useParams, Link } from 'react-router-dom';\n\nconst HomePage = () => {\n  const [data, setData] = useState(null);\n  const { type } = useParams();\n\n  useEffect(() => {\n    async function getPetsData() {\n      const petsData = await getPets(type);\n      setData(petsData);\n    }\n\n    getPetsData();\n  }, [type]);\n\n  if (!data) {\n    return <h2>Loading...</h2>;\n  }\n\n  return (\n    <div className=\"page\">\n      <Hero />\n      <h3>\n        <span className=\"pet-type-label\">{type ? `${type}s` : 'Pets'}</span>{' '}\n        available for adoption near you\n      </h3>\n\n      {data.length ? (\n        <div className=\"grid\">\n          {data.map((animal) => (\n            <Link\n              key={animal.id}\n              to={`/${animal.type.toLowerCase()}/${animal.id}`}\n              className=\"pet\"\n            >\n              <article>\n                <div className=\"pet-image-container\">\n                  {\n                    <img\n                      className=\"pet-image\"\n                      src={\n                        animal.photos[0]?.medium ||\n                        '/missing-animal.png'\n                      }\n                      alt=\"\"\n                    />\n                  }\n                </div>\n                <h3>{animal.name.toLowerCase()}</h3>\n                {animal.breeds.primary && <p><strong>Breed:</strong> <em>{animal.breeds.primary}</em></p>}\n                {animal.colors.primary && <p><strong>Color:</strong> <em>{animal.colors.primary}</em></p>}\n                {animal.gender && <p><strong>Gender:</strong> <em>{animal.gender}</em></p>}\n              </article>\n            </Link>\n          ))}\n        </div>\n      ) : (\n          <>\n            <p className=\"prompt\">No {type}s available for adoption now.</p>\n            <div className=\"pet-image-container\" style={{marginLeft: \"auto\", marginRight: \"auto\"}}>\n              <img\n                className=\"pet-image\"\n                src=\"https://sharedsapience.info/wp-content/uploads/2022/03/adopt-a-pet-fallback.png\"\n                alt=\"'Adopt a Pet' placeholder\"\n              />\n            </div>\n          </>\n      )}\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Pet = ({ animal }) => {\n  return (\n    <Link\n      key={animal.id}\n      to={`/${animal.type.toLowerCase()}/${animal.id}`}\n      className=\"pet\"\n    >\n      <article>\n        <div className=\"pet-image-container\">\n          {\n            <img\n              className=\"pet-image\"\n              src={\n                animal.photos[0]?.medium || 'https://i.imgur.com/aEcJUFK.png'\n              }\n              alt=\"\"\n            />\n          }\n        </div>\n        <h3>{animal.name}</h3>\n        {animal.breeds.primary && <p><strong>Breed:</strong> <em>{animal.breeds.primary}</em></p>}\n        {animal.colors.primary && <p><strong>Color:</strong> <em>{animal.colors.primary}</em></p>}\n        {animal.gender && <p><strong>Gender:</strong> <em>{animal.gender}</em></p>}\n      </article>\n    </Link>\n  );\n};\n\nexport default Pet;\n","import React, { useState, useEffect, useMemo } from 'react';\nimport Hero from '../../components/hero';\nimport { getPets } from '../../api/petfinder';\nimport Pet from '../../components/pet';\nimport { useLocation } from 'react-router-dom';\n\nconst SearchPage = () => {\n\n  // Get the search value from useLocation() here\n  const { search } = useLocation();\n\n  const queryParams = useMemo(() => { \n    return new URLSearchParams(search);\n  }, [search]);\n\n  const [pets, setPets] = useState([]);\n\n  useEffect(() => {\n    async function getPetsData() {\n      const petNameToFind = queryParams.get('name');\n      const petsData = await getPets('', petNameToFind);\n\n      setPets(petsData);\n    }\n\n    getPetsData();\n  }, [queryParams]);\n\n  return (\n    <div className=\"page\">\n      <Hero displayText={`Results for '${queryParams.get('name')}'`} />\n\n      <h3>Pets available for adoption near you</h3>\n\n      <main>\n        <div className=\"grid\">\n          {pets.map((pet) => (\n            <Pet animal={pet} key={pet.id} />\n          ))}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default SearchPage;\n","import React, { useEffect, useState } from 'react';\nimport { getPetDetails } from '../../api/petfinder';\nimport Hero from '../../components/hero';\nimport { useParams, Redirect } from 'react-router-dom';\n//import Pet from \"../../components/pet\";\n\nconst PetDetailsPage = () => {\n  const [data, setData] = useState();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const { id } = useParams();\n\n  useEffect(() => {\n    async function getPetsData() {\n      try {\n        const petsData = await getPetDetails(id);\n        setData(petsData);\n        setError(false);\n      } catch (e) {\n        setError(true);\n      }\n      setLoading(false);\n    }\n\n    getPetsData();\n  }, [id]);\n\n  const addDefaultSrc = (event) => {\n    event.target.src = \"https://sharedsapience.info/wp-content/uploads/2022/03/adopt-a-pet-fallback.png\";\n  };\n\n  return (\n    <div>\n      {loading ? (\n        <h3>Loading...</h3>\n      ) : error ? (\n        <div>\n          <Redirect to={'/pet-details-not-found'} />\n        </div>\n      ) : (\n        <main>\n          <Hero\n            image={data.photos[0].large || 'https://i.imgur.com/aEcJUFK.png'}\n            displayText={`Meet ${data.name.toLowerCase()}`}\n          />\n          <div className=\"horizontal-adoptee-photos\">\n            {data.photos.map((photo) =>\n                (\n                    <div className=\"pet-detail\" key={photo.medium}>\n                      <div className=\"detail-pet-image-container\">\n                        <img\n                            className=\"pet-image\"\n                            src={\n                              photo.medium\n                            }\n                            onError={addDefaultSrc}\n                            alt=\"\"\n                        />\n                      </div>\n                    </div>\n                )\n            )}\n          </div>\n            <div className='adoptee-info'>\n              <h1 className=\"animal-to-adopt-info\">{data.name.toLowerCase()}</h1>\n              <h2>Information:</h2>\n              {data.breeds.primary && <p><strong>Breed:</strong> <em>{data.breeds.primary}</em></p>}\n              {data.colors.primary && <p><strong>Color:</strong> <em>{data.colors.primary || 'Unknown'}</em></p>}\n              {data.gender && <p><strong>Gender:</strong> <em>{data.gender}</em></p>}\n              {data.description && <h3>Description</h3>}\n              {data.description && <p>{data.description}</p>}\n            </div>\n        </main>\n      )}\n    </div>\n  );\n};\n\nexport default PetDetailsPage;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst PetDetailsNotFound = () => {\n\n    const history = useHistory();\n\n  const goBack = () => {\n    history.goBack();\n  }\n  \n  return (\n    <main className=\"page\">\n      <h3>404: Who let the dogs out?</h3>\n      <p style={{\"text-align\": \"center\"}}>Sorry, but the details for this pet have not been uploaded by the shelter yet. Check back later!</p>\n      <img\n        src=\"https://i.chzbgr.com/full/8362031616/h9EB970C5/weve-lost-our-corgination\"\n        alt=\"\"\n      />\n      <div className=\"actions-container\">\n        <button className=\"button\" onClick={goBack}>\n          Go Back\n        </button>\n      </div>\n    </main>\n  );\n};\n\nexport default PetDetailsNotFound;\n","export default __webpack_public_path__ + \"static/media/logo.c7c56d31.svg\";","import React, { useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst Search = () => {\n\n  // get the history object here\n  const history = useHistory();\n  const searchInputRef = useRef();\n\n  const onSearchHandler = (e) => {\n    e.preventDefault();\n\n    const searchQuery = new URLSearchParams({\n      name: searchInputRef.current.value\n    }).toString();\n\n    if(searchQuery.trim().length === 5) { //if the 'searchQuery' equals 'name=' (i.e. there was no user input minus whitespace) then take no further action\n        return;\n    }\n\n    //otherwise, imperatively redirect with history.push()\n    history.push(`/search?${searchQuery}`);\n  };\n\n  return (\n    <form onSubmit={onSearchHandler} className=\"search-form\">\n      <input type=\"text\" className=\"search\" ref={searchInputRef} />\n      <button type=\"submit\" className=\"search-button\">\n        🔎\n      </button>\n    </form>\n  );\n};\n\nexport default Search;\n","import React from 'react';\n//import { useState } from 'react';\n//import { getPetTypes } from '../../api/petfinder';\nimport Logo from '../../assets/logo.svg';\nimport Search from '../search';\nimport { NavLink } from 'react-router-dom';\n\nconst Navigation = () => {\n\n  /* const [petTypes, setPetTypes] = useState([]);\n\n  const getPetTypesData = async () => {\n    const { types } = await getPetTypes();\n    setPetTypes(types);\n  };\n\n  React.useEffect(() => {\n    getPetTypesData();\n  }, []); */\n\n  return (\n    <nav>\n      <div className=\"nav-logo\">\n        <img src={Logo} alt=\"Petlover\" />\n        <Search />\n      </div>\n      <ul className=\"nav-links\">\n        <li key=\"all\">\n          <NavLink\n            to=\"/\"\n            className=\"nav-link\"\n            exact\n            activeClassName={\"nav-link-active\"}\n          >\n            All Pets\n          </NavLink>\n        </li>\n        <li key=\"Dog\">\n          <NavLink\n              to=\"/dog\"\n              activeClassName={\"nav-link-active\"}\n              key=\"Dog\"\n              className=\"nav-link\"\n          >\n            Dogs\n          </NavLink>{' '}\n        </li>\n        <li key=\"Cat\">\n          <NavLink\n              to=\"/cat\"\n              activeClassName={\"nav-link-active\"}\n              key=\"Cat\"\n              className=\"nav-link\"\n          >\n            Cats\n          </NavLink>{' '}\n        </li>\n        <li key=\"Rabbit\">\n          <NavLink\n              to=\"/rabbit\"\n              activeClassName={\"nav-link-active\"}\n              key=\"Rabbit\"\n              className=\"nav-link\"\n          >\n            Rabbits\n          </NavLink>{' '}\n        </li>\n        <li key=\"Bird\">\n          <NavLink\n              to=\"/bird\"\n              activeClassName={\"nav-link-active\"}\n              key=\"Bird\"\n              className=\"nav-link\"\n          >\n            Birds\n          </NavLink>{' '}\n        </li>\n        {/* This code creates <li> elements based on the contents of the 'petTypes' array; I decided to create them manually in order to test the UI more easily:\n        {petTypes\n          ? petTypes.map((type) => (\n              <li key={type.name}>\n                <NavLink\n                  to={`/${type._links.self.href.split('/').pop()}`}\n                  activeClassName={\"nav-link-active\"}\n                  key={type.name}\n                  className=\"nav-link\"\n                >\n                  {type.name}s\n                </NavLink>{' '}\n              </li>\n            ))\n          : 'Loading...'} */}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            Petlover: example pet adoption website created using HTML5, CSS3, and React JavaScript as part of Codecademy's 'Full-Stack Engineer' course.\r\n            <span className=\"right-align\">Chris Larham, 2022.</span>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;","import HomePage from './pages/home';\nimport SearchPage from './pages/search';\nimport PetDetailsPage from './pages/detail';\nimport PetDetailsNotFound from './pages/petDetailsNotFound';\nimport Navigation from './components/navigation';\nimport Footer from './components/footer';\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nfunction App() {\n  return (\n      <Router>\n          <div>\n              <Navigation />\n              <Switch>\n                  <Route path={'/:type/:id'}>\n                      <PetDetailsPage />\n                  </Route>\n                  <Route path={'/search'}>\n                      <SearchPage />\n                  </Route>\n                  <Route path={'/pet-details-not-found'}>\n                      <PetDetailsNotFound />\n                  </Route>\n                  <Route path={'/:type?'}>\n                      <HomePage />\n                  </Route>\n              </Switch>\n              <Footer />\n          </div>\n      </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst { worker } = require('./mocks/browser');\nworker.start();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { rest } from 'msw';\nimport types from './data/types.json';\nimport animals from './data/animals.json';\nimport details from './data/details.json';\n\nexport const handlers = [\n  rest.get('/types', (_req, res, ctx) => {\n    return res(ctx.status(200), ctx.json(types));\n  }),\n  rest.get('/animals', (req, res, ctx) => {\n    const type = req.url.searchParams.get('type');\n    const query = req.url.searchParams.get('query');\n    let response = animals.animals;\n\n    if (type !== '') {\n      response = response.filter(\n        (animal) => animal.type.toLowerCase() === type.toLowerCase()\n      );\n    }\n    if (query !== '') {\n      response = response.filter(\n        (animal) =>\n          animal.contact.address.state\n            .toLowerCase()\n            .includes(query.toLowerCase()) ||\n          animal.name.toLowerCase().includes(query.toLowerCase())\n      );\n    }\n    return res(ctx.status(200), ctx.json(response));\n  }),\n  rest.get('/animals/:id', (req, res, ctx) => {\n    const { id } = req.params;\n    let response = details[id];\n\n    if (!response) {\n      return res(ctx.status(404));\n    }\n\n    return res(ctx.status(200), ctx.json(response));\n  })\n];\n","import { setupWorker } from 'msw';\nimport { handlers } from './handlers';\n\nexport const worker = setupWorker(...handlers);\n"],"sourceRoot":""}